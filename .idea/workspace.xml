<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="58fb2751-063f-4080-a7d2-0208f54c0f86" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.idea/jpa-buddy.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/ropc-service.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ropc-backend/handlers/application_handler.go" beforeDir="false" afterPath="$PROJECT_DIR$/ropc-backend/handlers/application_handler.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ropc-backend/handlers/application_handler_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/ropc-backend/handlers/application_handler_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ropc-backend/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/ropc-backend/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ropc-backend/mocks/ApplicationHandler.go" beforeDir="false" afterPath="$PROJECT_DIR$/ropc-backend/mocks/ApplicationHandler.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ropc-backend/mocks/Router.go" beforeDir="false" afterPath="$PROJECT_DIR$/ropc-backend/mocks/Router.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ropc-backend/model/dto.go" beforeDir="false" afterPath="$PROJECT_DIR$/ropc-backend/model/dto.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ropc-backend/model/entity.go" beforeDir="false" afterPath="$PROJECT_DIR$/ropc-backend/model/entity.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ropc-backend/model/request.go" beforeDir="false" afterPath="$PROJECT_DIR$/ropc-backend/model/request.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ropc-backend/model/response.go" beforeDir="false" afterPath="$PROJECT_DIR$/ropc-backend/model/response.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ropc-backend/routers/chi_router.go" beforeDir="false" afterPath="$PROJECT_DIR$/ropc-backend/routers/chi_router.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ropc-backend/routers/gorilla_mux_router.go" beforeDir="false" afterPath="$PROJECT_DIR$/ropc-backend/routers/gorilla_mux_router.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ropc-backend/routers/router.go" beforeDir="false" afterPath="$PROJECT_DIR$/ropc-backend/routers/router.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/ropc-backend" />
  </component>
  <component name="MacroExpansionManager">
    <option name="directoryName" value="9lch5a2y" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo"><![CDATA[{
  "customColor": "",
  "associatedIndex": 6
}]]></component>
  <component name="ProjectId" id="2X2fXCAq8A9vs4Q2VNtcBde87sn" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "WebServerToolWindowFactoryState": "false",
    "git-widget-placeholder": "main",
    "go.import.settings.migrated": "true",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager" selected="Go Build.go run">
    <configuration default="true" type="AZURE_FUNCTION_SUPPORT" factoryName="Run Functions">
      <option name="appName" />
      <option name="appServicePlanName" />
      <option name="appServicePlanResourceGroup" />
      <option name="appSettingsKey" value="7a2db8a3-89a9-4330-8dd2-231a517b1962" />
      <option name="artifact" />
      <option name="debugOptions" />
      <option name="deployment" />
      <option name="deploymentStagingDirectoryPath" />
      <option name="funcPath" />
      <option name="functionHostArguments" />
      <option name="hostJsonPath" />
      <option name="insightsName" />
      <option name="instrumentationKey" />
      <option name="javaVersion" />
      <option name="localSettingsJsonPath" />
      <option name="moduleName" />
      <option name="os" />
      <option name="pricingTier" />
      <option name="providerMap">
        <map />
      </option>
      <option name="region" />
      <option name="resourceGroup" />
      <option name="stagingFolder" />
      <option name="subscription" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="ropc-service" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go run" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="ropc-service" />
      <working_directory value="$PROJECT_DIR$/ropc-backend" />
      <envs>
        <env name="ROPC_MUX" value="chi_router" />
        <env name="ROPC_SERVER_PORT" value="8080" />
        <env name="ROPC_DB_USER" value="unitz" />
        <env name="ROPC_DATABASE_PASSWORD" value="unitz007" />
        <env name="ROPC_DB_NAME" value="ropc_db" />
        <env name="ROPC_DB_HOST" value="localhost" />
        <env name="ROPC_DB_PORT" value="3306" />
      </envs>
      <kind value="PACKAGE" />
      <package value="backend-server" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/ropc-backend/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="TestGetApplication/should_panic_with_application_does_not_exist in backend-server/handlers" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="ropc-service" />
      <working_directory value="$PROJECT_DIR$/ropc-backend/handlers" />
      <root_directory value="$PROJECT_DIR$/ropc-backend" />
      <kind value="PACKAGE" />
      <package value="backend-server/handlers" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGetApplication\E$/^\Qshould_panic_with_application_does_not_exist\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestGetApplication/should_panic_with_application_not_found in backend-server/handlers" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="ropc-service" />
      <working_directory value="$PROJECT_DIR$/ropc-backend/handlers" />
      <root_directory value="$PROJECT_DIR$/ropc-backend" />
      <kind value="PACKAGE" />
      <package value="backend-server/handlers" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGetApplication\E$/^\Qshould_panic_with_application_not_found\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestGetApplication/should_return_status_404_if_{client_id}_is_not_provided in backend-server/handlers" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="ropc-service" />
      <working_directory value="$PROJECT_DIR$/ropc-backend/handlers" />
      <root_directory value="$PROJECT_DIR$/ropc-backend" />
      <kind value="PACKAGE" />
      <package value="backend-server/handlers" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGetApplication\E$/^\Qshould_return_status_404_if_{client_id}_is_not_provided\E$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="ropc-service" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="go test backend-server/handlers" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="ropc-service" />
      <working_directory value="$PROJECT_DIR$/ropc-backend/handlers" />
      <root_directory value="$PROJECT_DIR$/ropc-backend" />
      <kind value="PACKAGE" />
      <package value="backend-server/handlers" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go Build.go run" />
      <item itemvalue="Go Test.TestGetApplication/should_panic_with_application_does_not_exist in backend-server/handlers" />
      <item itemvalue="Go Test.TestGetApplication/should_panic_with_application_not_found in backend-server/handlers" />
      <item itemvalue="Go Test.TestGetApplication/should_return_status_404_if_{client_id}_is_not_provided in backend-server/handlers" />
      <item itemvalue="Go Test.go test backend-server/handlers" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestGetApplication/should_panic_with_application_not_found in backend-server/handlers" />
        <item itemvalue="Go Test.TestGetApplication/should_panic_with_application_does_not_exist in backend-server/handlers" />
        <item itemvalue="Go Test.TestGetApplication/should_return_status_404_if_{client_id}_is_not_provided in backend-server/handlers" />
        <item itemvalue="Go Test.go test backend-server/handlers" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="58fb2751-063f-4080-a7d2-0208f54c0f86" name="Changes" comment="" />
      <created>1697832135052</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1697832135052</updated>
      <workItem from="1697832143152" duration="10110000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>